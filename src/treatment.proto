syntax = "proto3";

package treatment;

// SERVICES ===================================================================

service TreatmentService {
  rpc CreateInstance (CreateInstanceReq) returns (Instance);
}

// OBJECTS ====================================================================

message Instance {
  uint32 id = 1;
  uint32 doctor_id = 2;
  uint32 patient_id = 3;
  InstanceStatus status = 4;
  string schema_instance_id = 5;
  string started_at = 6;
  string finished_at = 7;
  string deleted_at = 8;
}

// message SchemaInstance {
//   string id = 1;
//   Schema schema_reference = 5;
// }

message Schema {
  uint32 id = 1;
  string name = 2;
  uint32 author_id = 3;
  string created_at = 4;
  string updated_at = 5;
  string deleted_at = 6;
  repeated Task tasks = 7;
}

message Task {
  uint32 id = 1;
  int32 level = 2;
  string name = 3;
  TaskStatus status = 4;
  repeated uint32 blocked_by = 5;
  optional uint32 responsible_id = 6;
  optional uint32 time_limit = 7;
  repeated Task children = 8;
  optional string comment = 9;
}

// ENUMS ======================================================================

enum InstanceStatus {
  INSTANCE_STATUS_UNSPECIFIED = 0;
  INSTANCE_STATUS_RUNNING = 1;
  INSTANCE_STATUS_BLOCKED = 2;
  INSTANCE_STATUS_COMPLETED = 3;
  INSTANCE_STATUS_CANCELLED = 4;
}

enum TaskStatus {
  TASK_STATUS_UNSPECIFIED = 0;
  TASK_STATUS_NOT_STARTED = 1;
  TASK_STATUS_IN_PROGRESS = 2;
  TASK_STATUS_BLOCKED = 3;
  TASK_STATUS_DONE = 4;
}


// REQUESTS ===================================================================

message CreateInstanceReq {
  Schema schema = 1;
  uint32 patient_id = 2;
  uint32 doctor_id = 3;
}

message InstanceById {
  uint32 id = 1;
}

// RESPONSES ==================================================================

